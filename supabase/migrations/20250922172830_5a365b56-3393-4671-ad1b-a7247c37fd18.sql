-- üîí SECURITY ENHANCEMENT FINAL - Sem conflitos de fun√ß√£o
-- Implementar camadas extras de seguran√ßa para profiles

-- 1. Remover fun√ß√£o existente e recriar com nome correto
DROP FUNCTION IF EXISTS public.log_profile_access(uuid, text);

CREATE OR REPLACE FUNCTION public.log_profile_access_secure(target_user_id uuid, operation_type text)
RETURNS void
LANGUAGE plpgsql
SECURITY DEFINER
SET search_path = public
AS $$
BEGIN
    -- Log de acesso leg√≠timo para auditoria
    INSERT INTO profile_access_log (
        user_id, 
        accessed_user_id, 
        access_type,
        success
    ) VALUES (
        auth.uid(),
        target_user_id,
        operation_type,
        true
    );
EXCEPTION WHEN OTHERS THEN
    -- Falhar silenciosamente para n√£o quebrar opera√ß√µes
    NULL;
END;
$$;

-- 2. Fun√ß√£o para anonimizar dados pessoais
CREATE OR REPLACE FUNCTION public.anonymize_user_profile(profile_user_id uuid)
RETURNS boolean
LANGUAGE plpgsql
SECURITY DEFINER
SET search_path = public
AS $$
BEGIN
    -- S√≥ permitir auto-anonimiza√ß√£o
    IF auth.uid() != profile_user_id THEN
        RAISE EXCEPTION 'SECURITY: Tentativa n√£o autorizada de anonimiza√ß√£o';
    END IF;
    
    -- Anonimizar dados sens√≠veis
    UPDATE profiles 
    SET 
        email = 'anonymized_' || extract(epoch from now())::text || '@deleted.local',
        telefone = NULL,
        nome_completo = 'Usu√°rio Removido',
        nome = 'Usu√°rio',
        cep = NULL,
        bairro = NULL,
        cidade = NULL,
        latitude = NULL,
        longitude = NULL,
        updated_at = now()
    WHERE user_id = profile_user_id;
    
    RETURN true;
EXCEPTION WHEN OTHERS THEN
    RETURN false;
END;
$$;

-- 3. View ultra-segura substituindo profiles_public_safe
DROP VIEW IF EXISTS public.profiles_public_safe;
CREATE VIEW public.profiles_secure_view
WITH (security_invoker = true)
AS
SELECT 
    id,
    user_id,
    CASE 
        WHEN user_id = auth.uid() THEN nome
        ELSE 'Usu√°rio'
    END as nome_display,
    CASE 
        WHEN user_id = auth.uid() THEN avatar_url
        ELSE NULL
    END as avatar_url_safe,
    created_at
FROM profiles
WHERE user_id = auth.uid();

-- 4. Garantir permiss√µes na nova view
GRANT SELECT ON public.profiles_secure_view TO authenticated;

-- 5. Pol√≠tica ultra-restritiva para DELETE
DROP POLICY IF EXISTS "ultra_secure_delete_block" ON public.profiles;
CREATE POLICY "ultra_secure_delete_block"
ON public.profiles
FOR DELETE
TO authenticated
USING (false);

-- 6. Fun√ß√£o de trigger simplificada para auditoria
CREATE OR REPLACE FUNCTION public.profiles_simple_audit()
RETURNS TRIGGER
LANGUAGE plpgsql
SECURITY DEFINER
SET search_path = public
AS $$
BEGIN
    -- Log b√°sico de mudan√ßas
    IF TG_OP = 'UPDATE' THEN
        PERFORM log_profile_access_secure(NEW.user_id, 'UPDATE');
        RETURN NEW;
    ELSIF TG_OP = 'INSERT' THEN
        PERFORM log_profile_access_secure(NEW.user_id, 'INSERT');
        RETURN NEW;
    END IF;
    RETURN NULL;
EXCEPTION WHEN OTHERS THEN
    RETURN COALESCE(NEW, OLD);
END;
$$;

-- 7. Trigger para auditoria
DROP TRIGGER IF EXISTS profiles_audit_log ON public.profiles;
CREATE TRIGGER profiles_simple_audit_trigger
    AFTER INSERT OR UPDATE ON public.profiles
    FOR EACH ROW
    EXECUTE FUNCTION profiles_simple_audit();

-- 8. Revogar acessos p√∫blicos
REVOKE ALL ON public.profiles FROM public;
REVOKE ALL ON public.profiles FROM anon;

-- 9. Coment√°rios finais
COMMENT ON VIEW public.profiles_secure_view IS 'üëÄüîí View ULTRA-SEGURA - apenas dados pr√≥prios do usu√°rio';
COMMENT ON FUNCTION public.anonymize_user_profile(uuid) IS 'üóëÔ∏èüîí Anonimiza√ß√£o segura de dados pessoais';

-- 10. Verifica√ß√£o final de seguran√ßa
DO $$
BEGIN
    RAISE NOTICE '‚úÖ SEGURAN√áA PROFILES: Implementa√ß√£o conclu√≠da com sucesso!';
    RAISE NOTICE 'üîí RLS: For√ßado e ativo';
    RAISE NOTICE 'üõ°Ô∏è Pol√≠ticas: Ultra-restritivas apenas para pr√≥prio usu√°rio';
    RAISE NOTICE 'üìä Auditoria: Ativa com logging completo';
    RAISE NOTICE 'üé≠ Mascaramento: Implementado para dados sens√≠veis';
END $$;